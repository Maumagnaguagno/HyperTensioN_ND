# Generated by Hype
require 'C:/Users/Mau/Desktop/HyperTensioN_U/Hypertension_U'
require_relative 'external' if File.exist?(File.expand_path('../external.rb', __FILE__))

module Search
  include Hypertension_U
  extend self

  #-----------------------------------------------
  # Domain
  #-----------------------------------------------

  @domain = {
    # Operators
    'move' => 1,
    'invisible_visit' => 1,
    'invisible_unvisit' => 1,
    # Methods
    'forward' => [
      'forward_base',
      'forward_recursion'
    ]
  }

  #-----------------------------------------------
  # Operators
  #-----------------------------------------------

  def move(agent, from, to)
    return unless (@state['at'].include?([agent, from]) and External.visible(from, to))
    apply(
      # Add effects
      [
        ['at', agent, to]
      ],
      # Del effects
      [
        ['at', agent, from]
      ]
    )
  end

  def invisible_visit(agent, pos)
    apply(
      # Add effects
      [
        ['visited', agent, pos]
      ],
      # Del effects
      []
    )
  end

  def invisible_unvisit(agent, pos)
    apply(
      # Add effects
      [],
      # Del effects
      [
        ['visited', agent, pos]
      ]
    )
  end

  #-----------------------------------------------
  # Methods
  #-----------------------------------------------

  def forward_base(agent, goal)
    return unless @state['at'].include?([agent, goal])
    yield []
  end

  def forward_recursion(agent, goal)
    from = ''
    place = ''
    generate(
      # Positive preconditions
      [
        ['at', agent, from]
      ],
      # Negative preconditions
      [], from
    ) {
      External.near(from, place) {
        p place
        next if @state['visited'].include?([agent, place])
        yield [
          ['move', agent, from, place],
          ['invisible_visit', agent, from],
          ['forward', agent, goal],
          ['invisible_unvisit', agent, from]
        ]
      }
    }
  end
end